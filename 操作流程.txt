
终端 mysql -uroot -p   进入私人操作，无密码，点击回车
create database db_bbs charset utf8;

settings.py 设置替代原有的
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME':'db_bbs',
        'USER':'root',
        'PASSWORD':'',
        'HOST':'127.0.0.1',
        'PORT':''
    }
}


创建static文件  下载添加Bootstrap源码 及配置jQuery


创建基本视图
首页、登录、注册
配置对应的HTML 文件


在BBS 下面_init_ 文件 导入 pymysql

import pymysql
pymysql.install_as_MySQLdb()


(在pycharm 的Terminal里  pip install PyMySQL)

创建表并数据迁移
python manage.py makemigrations
python manage.py migrate

（报错：最后,发现在settings.py 文件加上下面一句话就可以了
AUTH_USER_MODEL = 'user.ExtendUser' #user是app名字,ExtendUser是类名 覆盖django的user表。）

（UserInfo表继承authenticate(username,password)函数需要两个参数username，password，它自带2个参数验证）

注意在hmtl中<form>
  需要添加{% csrf_token %}


python manage.py createsuperuser  创建超级用户  进行登录测试

创建 myforms 运用forms组件 继承，然后自定义局部钩子和全局钩子验证


register视图   基于forms的循环渲染表单，注意添加label标签


创建enter_code.py 用于登录验证 （验证码或者验证图片） 

生成一个django 图片类型用html 用seesion动态储存字符 



html里面加载图片需要在  setting.py 添加
STATIC_DIR =   (
    os.path.join(BASE_DIR, "static"),
)    {static 为你设置的图片文件夹}


html 开头需要添加 {% load staticfiles %}
图片填写格式例如：  <img class="img-logo" src="{% static "img/top-logo.png" %}

lable标签 和 input 的id相同时，是点击关联的。


基于ajax 的用户验证 
*button按钮不能放在form表单里面，button不需要type类型，
提交 表单 
print(form.cleaned_data）  获取 符合规则的数据
print(form.errors)  获取 错误的输入数据


ajax ERR_CONNECTION_REFUSED  报这个错误的时候，说明调试提交数据是，端口已经被占用，重新启动就可以了

用admin 后台管理需要  把表注册一下


首页渲染文件或者渲染用户头像（拿上传到服务器的文件） 需要在setting 里面配置 
MEDIA_ROOT=os.path.join(BASE_DIR,"media")
MEDIA_URL="/media/"

然后在url下面配置
re_path(r"media/(?P<path>.*)$",serve,{"document_root":settings.MEDIA_ROOT}),


在配置里面修改时间
TIME_ZONE = 'Asia/Shanghai'    （UTC 没有'Asia/Beijing' ）


注意：在编辑html时，检查导入js和boostorp没有


if request.user.is_authenticated():
    # 做一些事情针对验证用户.
else:
    # 做一些事情对于匿名未登录用户.


def logout(request):
    """
    注销视图 自带的auth组件判断
    :param request:
    :return:
    """
    auth.logout(request)  # request.session.flush()--冲洗
    #logout不需要配置视图
    return redirect("/login/")

url配置 

# ^匹配字符串的开头 $匹配字符串的末尾。  小写w 匹配数字字母下划线， + （重复 >=1 次） {a+b,（abbb)}）,*匹配0个或多个的表达式。
有名分组  ： 命名正则表达式组的语法是(?P<name>pattern)
命名空间（英语：Namespace）  多功能项目下运用


views  设置
响应对象主要有三种形式：
HttpResponse()
render()
redirect()

html 解耦 模板  
{% block 名称id %}
{% endblock %}

继承模板
{% extends '模板名称' %}

当需要进行  orm 时间筛选是  
 #  需要在setting里面设置  时区改为   USE_TZ = False

复用区域的文章继承
需要创建py文件包  固定名字 （模板标签）






